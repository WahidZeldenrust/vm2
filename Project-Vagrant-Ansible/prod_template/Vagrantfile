# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

CUSTOMER_ID="{CUSTOMER_ID}"
WEB="{ID}10"
WEB2="{ID}11"
LB="{ID}12"
DB="{ID}13"


Vagrant.configure("2") do |config|

  config.ssh.insert_key = false
  config.ssh.private_key_path = ["~/.ssh/id_rsa","~/.vagrant.d/insecure_private_key"]

  config.vm.define CUSTOMER_ID"-prod-webserver01" do |webserver|
    webserver.vm.box = "ubuntu/xenial32"
    webserver.vm.hostname = CUSTOMER_ID"-prod-webserver01"
    webserver.vm.network "private_network", ip: WEB
    webserver.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
    webserver.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.gui = false
      vb.name = CUSTOMER_ID"-prod-webserver01"
    end
  end
  config.vm.define CUSTOMER_ID"-prod-webserver02" do |webserver2|
    webserver2.vm.box = "ubuntu/xenial32"
    webserver2.vm.hostname = CUSTOMER_ID"-prod-webserver02"
    webserver2.vm.network "private_network", ip: WEB2
    webserver2.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
    webserver2.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.gui = false
      vb.name = CUSTOMER_ID"-prod-webserver02"
    end
  end
  config.vm.define CUSTOMER_ID"-prod-loadbalancer" do |loadbalancer|
    loadbalancer.vm.box = "ubuntu/xenial32"
    loadbalancer.vm.hostname = CUSTOMER_ID"-prod-loadbalancer"
    loadbalancer.vm.network "private_network", ip: LB
    loadbalancer.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
    loadbalancer.vm.provider "virtualbox" do |vb|
      vb.memory = "512"
      vb.gui = false
      vb.name = CUSTOMER_ID"-prod-loadbalancer"
    end
  end
  config.vm.define CUSTOMER_ID"-prod-database" do |db|
      db.vm.box = "ubuntu/xenial32"
      db.vm.hostname = CUSTOMER_ID"-prod-database"
      db.vm.network "private_network", ip: DB
      db.vm.provision "file", source: "~/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
      db.vm.provider "virtualbox" do |vb|
        vb.memory = "512"
        vb.gui = false
        vb.name = CUSTOMER_ID"-prod-database"
      end
    end
end
